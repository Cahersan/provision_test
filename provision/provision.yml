---
- hosts: all
  vars_files:
    - vars.yml

  tasks:
  - name: Create a directory for django apps.
    file: state=directory path={{apps_root}}

  - name: Create a virtualenv directory in django apps directory.
    file: state=directory path={{apps_root}}/env/

  - name: Install required system packages.
    apt: pkg={{item}} state=installed update-cache=yes
    with_items: system_packages

  - name: Install easy_install packages
    easy_install: name={{item}}
    with_items: easy_install_packages

  - name: Install Python Packages
    pip: name={{item}} virtualenv={{apps_root}}/env/
    with_items: python_packages

  - name: Start django project
    shell: "{{apps_root}}/env/bin/django-admin.py startproject {{project_name}} chdir={{apps_root}} creates={{apps_root}}/{{project_name}}"

  - name: Start django app 
    shell: "{{apps_root}}/env/bin/django-admin.py startapp {{app_name}} chdir={{apps_root}}/{{project_name}} creates={{apps_root}}/{{project_name}}/{{app_name}}"

  - name: Copy settings.py to new project
    copy: src=conf/settings.py dest={{apps_root}}/{{project_name}}/{{project_name}}

  - name: setup pg_hba file
    copy: src=conf/pg_hba.conf dest=/etc/postgresql/9.1/main/pg_hba.conf owner=postgres group=postgres mode=0640
    register: pg_file

  - name: reload postgres if it changed
    service: name=postgresql state=reloaded enabled=yes
    when: pg_file.changed

  - name: Create postgreSQL database
    postgresql_db: name=mydatabase

  - name: Create postgreSQL user
    postgresql_user: db=mydatabase name=mydatabaseuser password=mypassword priv=ALL

  - name: Sync database
    django_manage: app_path={{apps_root}}/{{project_name}} command=syncdb virtualenv={{apps_root}}/env

  - name: Copy initial_data.json (created using manage.py dumpdata > file.json)
    copy: src=conf/initial_data.json dest={{apps_root}}/{{project_name}}
  
  - name: Load superuser information and other from initial_data.json
    django_manage: command=loaddata app_path={{apps_root}}/{{project_name}} fixtures=initial_data.json virtualenv={{apps_root}}/env

  - name: copy nginx configuration file
    copy: src=conf/nginx.conf dest=/etc/nginx/sites-enabled/
    notify: restart nginx

  - name: copy gunicorn configuration
    copy: src=conf/gunicorn_init.conf dest=/etc/init
    notify: restart gunicorn

  handlers:
    - include: handlers.yml
